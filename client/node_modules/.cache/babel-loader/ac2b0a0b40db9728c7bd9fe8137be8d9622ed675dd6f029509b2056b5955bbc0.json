{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiagrazdanceva/Desktop/front/weather/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport Footer from './components/footer/Footer';\nimport Search from './components/search/Search';\nimport Body from './components/body/Body';\nimport './styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_WEATHERDATA = gql`\n  query Query($inpValue: String) {\n    weather(inpValue: $inpValue) {\n      location {\n        city\n        country\n        localtime\n      }\n      values {\n        temp\n        pressure\n        humidity\n        precip\n        windDir\n        windSpeed\n        windGust\n        cloud\n        vis\n      }\n    }\n  }\n`;\nfunction App() {\n  _s();\n  const [getWeather, response] = useLazyQuery(GET_WEATHERDATA);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      getWeather: getWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(Body, {\n      response: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MmjOLCpxgr+QIjy6gGvlDECxLms=\", false, function () {\n  return [useLazyQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","gql","useLazyQuery","Footer","Search","Body","jsxDEV","_jsxDEV","GET_WEATHERDATA","App","_s","getWeather","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anastasiagrazdanceva/Desktop/front/weather/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport Footer from './components/footer/Footer';\nimport Search from './components/search/Search';\nimport Body from './components/body/Body';\nimport './styles/main.css'\n\nconst GET_WEATHERDATA = gql`\n  query Query($inpValue: String) {\n    weather(inpValue: $inpValue) {\n      location {\n        city\n        country\n        localtime\n      }\n      values {\n        temp\n        pressure\n        humidity\n        precip\n        windDir\n        windSpeed\n        windGust\n        cloud\n        vis\n      }\n    }\n  }\n`\n\n\nfunction App() {\n  const [getWeather, response] = useLazyQuery(GET_WEATHERDATA);\n\n  return (\n    <div className='app'>\n      <Search getWeather={getWeather} />\n      {response && <Body response={response} />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,YAAY,QAAQ,gBAAgB;AAClD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAGD,SAASQ,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGV,YAAY,CAACM,eAAe,CAAC;EAE5D,oBACED,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBP,OAAA,CAACH,MAAM;MAACO,UAAU,EAAEA;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjCN,QAAQ,iBAAIL,OAAA,CAACF,IAAI;MAACO,QAAQ,EAAEA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCX,OAAA,CAACJ,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACR,EAAA,CAVQD,GAAG;EAAA,QACqBP,YAAY;AAAA;AAAAiB,EAAA,GADpCV,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}