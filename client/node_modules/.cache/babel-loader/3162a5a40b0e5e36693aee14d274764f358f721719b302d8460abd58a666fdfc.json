{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiagrazdanceva/Desktop/front/weather/client/src/components/body/Body.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport WeatherBlock from \"../weatherBlock/WeatherBlock\";\nimport s from './weatherBody.module.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_WEATHERDATA = gql`\nquery Location($inputSearch: String) {\n  getWeatherData(inputSearch: $inputSearch) {\n    location {\n      city\n      country\n      localtime\n    }\n    data {\n      temp\n      pressure\n      humidity\n      precip\n      windDir\n      windSpeed\n      windGust\n      cloud\n      vis\n    }\n  }\n}  \n`;\nconst Body = _ref => {\n  _s();\n  let {\n    inputSearch\n  } = _ref;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_WEATHERDATA, {\n    variables: {\n      inputSearch\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.weather,\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.weather,\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  const local = data.location;\n  const weather = data.weather;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.weather,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.location,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.cityName,\n        children: local.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.countryName,\n        children: local.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.localtime,\n      children: local.localtime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.row,\n        children: [/*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Температура (С)',\n          data: weather.temp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Давление (мб)',\n          data: weather.pressure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.row,\n        children: [/*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Влажность (%)',\n          data: weather.humidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Количество осадков (мм)',\n          data: weather.precip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.row,\n        children: [/*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Направление ветра',\n          data: weather.windDir\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Скорость ветра (км/ч)',\n          data: weather.windSpeed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Порывы ветра (км/ч)',\n          data: weather.windGust\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.row,\n        children: [/*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Облачность (%)',\n          data: weather.cloud\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBlock, {\n          title: 'Видимость (км)',\n          data: weather.vis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","gql","useQuery","WeatherBlock","s","jsxDEV","_jsxDEV","GET_WEATHERDATA","Body","_ref","_s","inputSearch","loading","error","data","variables","className","weather","children","fileName","_jsxFileName","lineNumber","columnNumber","message","local","location","cityName","city","countryName","country","localtime","body","row","title","temp","pressure","humidity","precip","windDir","windSpeed","windGust","cloud","vis","_c","$RefreshReg$"],"sources":["/Users/anastasiagrazdanceva/Desktop/front/weather/client/src/components/body/Body.jsx"],"sourcesContent":["import React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport WeatherBlock from \"../weatherBlock/WeatherBlock\";\nimport s from './weatherBody.module.sass';\n\nconst GET_WEATHERDATA = gql`\nquery Location($inputSearch: String) {\n  getWeatherData(inputSearch: $inputSearch) {\n    location {\n      city\n      country\n      localtime\n    }\n    data {\n      temp\n      pressure\n      humidity\n      precip\n      windDir\n      windSpeed\n      windGust\n      cloud\n      vis\n    }\n  }\n}  \n`\n\nconst Body = ({inputSearch}) => {\n\n  const { loading, error, data } = useQuery(GET_WEATHERDATA, {\n    variables: { inputSearch }\n  });\n  \n  if (loading) return <div className={s.weather}>Loading...</div>;\n  if (error) return <div className={s.weather}>Error: {error.message}</div>;\n\n  const local = data.location;\n  const weather = data.weather;\n\n  return (\n    <div className={s.weather}>\n\n      <div className={s.location}>\n        <div className={s.cityName}>{local.city}</div>\n        <div className={s.countryName}>{local.country}</div>\n      </div>\n      <div className={s.localtime}>{local.localtime}</div>\n\n\n      <div className={s.body}>\n        <div className={s.row}>\n          <WeatherBlock title={'Температура (С)'} data={weather.temp} />\n          <WeatherBlock title={'Давление (мб)'} data={weather.pressure} />\n        </div>\n\n        <div className={s.row}>\n          <WeatherBlock title={'Влажность (%)'} data={weather.humidity} />\n          <WeatherBlock title={'Количество осадков (мм)'} data={weather.precip} />\n        </div>\n\n        <div className={s.row}>\n          <WeatherBlock title={'Направление ветра'} data={weather.windDir} />\n          <WeatherBlock title={'Скорость ветра (км/ч)'} data={weather.windSpeed} />\n          <WeatherBlock title={'Порывы ветра (км/ч)'} data={weather.windGust} />\n        </div>\n\n        <div className={s.row}>\n          <WeatherBlock title={'Облачность (%)'} data={weather.cloud} />\n          <WeatherBlock title={'Видимость (км)'} data={weather.vis} />\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Body;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}